#!/usr/bin/env bash

# Strict mode.

set -o nounset;
set -o errexit;
set -o errtrace;
set -o pipefail;

# Shell options.

shopt -s dotglob;
shopt -s globstar;
shopt -s nullglob;
shopt -s failglob;

# Stack trace on error.

function stack-trace() {
  set +o xtrace; # Disable.

  local last_command_status_code=$?;
  local exit_status_code="${1:-1}";

  echo '----------------------------------------------------------------------';
  echo 'Error in '"${BASH_SOURCE[1]}"':'"${BASH_LINENO[0]}";
  echo '`'"${BASH_COMMAND}"'` exited with status `'"${last_command_status_code}"'`.';

  if [[ ${#FUNCNAME[@]} -gt 2 ]]; then
    echo 'Stack Trace:';
    for ((_i=1; _i < ${#FUNCNAME[@]}-1; _i++)); do
      echo " ${_i}: ${BASH_SOURCE[${_i}+1]}:${BASH_LINENO[${_i}]} ${FUNCNAME[${_i}]}(...)";
    done;
  fi;
  if [[ -s /var/log/php/errors.log ]]; then
    echo '--- The following PHP errors were found in the log: ------------------';
    cat /var/log/php/errors.log; exit 1;
  fi;
  echo 'Exiting w/ status `'"${exit_status_code}"'`.'; exit "${exit_status_code}";
};
trap stack-trace ERR; # Trap errors & print a stack trace.
