#!/usr/bin/env bash

# Maybe install/configure WordPress.

if [[ -n "${CI_RUN_WP}" && -n "${CI_RUN_WP_VERSION}" ]]; then

  # Download via cURL or WP-CLI (easier).

  if [[ "${CI_RUN_WP_VERSION}" =~ \-nightly$ ]]; then
    curl https://wordpress.org/nightly-builds/wordpress-latest.zip --location --output /tmp/bootstrap/wordpress-nightly.zip;
    unzip -qq -d /tmp/bootstrap/wordpress-nightly /tmp/bootstrap/wordpress-nightly.zip;
    cp --force --recursive /tmp/bootstrap/wordpress-nightly/wordpress/. /var/bootstrap/wp;
    rm --force --recursive /tmp/bootstrap/wordpress-nightly;
    rm /tmp/bootstrap/wordpress-nightly.zip;

  else # We can just use WP-CLI to download a specific version.
    wp core download --version="${CI_RUN_WP_VERSION}" --path=/var/bootstrap/wp --allow-root;
  fi;
  # Install and configure WordPress.

  for _wp_run in standard multisite; do

    # Work out conditional variables; else continue if n/a.

    if [[ "${CI_RUN_WP}" == 'multisite' && "${CI_RUN_WP}" == "${_wp_run}" ]]; then
      _wp_install_command='multisite-install';

    elif [[ "${CI_RUN_WP}" == 'standard' && "${CI_RUN_WP}" == "${_wp_run}" ]]; then
      _wp_install_command='install';

    else continue; fi; # Bypass; not applicable.

    # Generate a `/wp-config.php` file.

    wp core config \
      --dbhost=127.0.0.1:3306 \
      --dbname=db0 --dbprefix=wp_ \
      --dbcharset=utf8mb4 --dbcollate=utf8mb4_unicode_ci \
      --dbuser=client --dbpass=ciTNh5xXhsjNXwQ \
      --allow-root;

    # Install WordPress DB tables, etc.

    wp core "${_wp_install_command}" \
      --title=WordPress --admin_user=admin --admin_password=admin \
      --admin_email=ci+admin@wsharks.com --skip-email \
      --allow-root;

    # Create 2 users w/ each default role (10 users total).

    for _wp_role in administrator editor author contributor subscriber; do
      for _wp_user_i in {1..2}; do
        wp user create "${_wp_role}${_wp_user_i}" ci+"${_wp_role}${_wp_user_i}"@wsharks.com --user_pass="${_wp_role}${_wp_user_i}" --role="${_wp_role}" \
          --first_name=Test --last_name="${_wp_role^}${_wp_user_i}" --display_name='Test '"${_wp_role^}${_wp_user_i}" --allow-root;
      done; unset _wp_user_i;
    done; unset _wp_role;

    # Create 2 additional users (generic subscribers) for testing purposes.

    for _wp_user_i in {1..2}; do
      wp user create user"${_wp_user_i}" ci+user"${_wp_user_i}"@wsharks.com --user_pass=user"${_wp_user_i}" --role=subscriber \
        --first_name=Test --last_name=User"${_wp_user_i}" --display_name='Test User'"${_wp_user_i}" --allow-root;
    done; unset _wp_user_i;

    # If multisite, create 2 child sites & add users to those sites.

    if [[ "${CI_RUN_WP}" == 'multisite' ]]; then
      for _wp_site_i in {1..2}; do
        wp site create --slug=site"${_wp_site_i}" --title=Site"${_wp_site_i}" --allow-root;

        for _wp_role in administrator editor author contributor subscriber; do
          for _wp_user_i in {1..2}; do
            wp user set-role "${_wp_role}${_wp_user_i}" "${_wp_role}" --url=https://ci.vm/site"${_wp_site_i}" --allow-root;
          done; unset _wp_user_i;
        done; unset _wp_role;

        for _wp_user_i in {1..2}; do
          wp user set-role user"${_wp_user_i}" subscriber --url=https://ci.vm/site"${_wp_site_i}" --allow-root;
        done; unset _wp_user_i;
      done; unset _wp_site_i;
    fi;
    # If this is a WP theme or plugin; symlink & activate.

    if [[ -f "${CI_CFG_BUILD_DIR}"/readme.txt ]]; then

      # If this is a WordPress plugin.

      if [[ -f "${CI_CFG_BUILD_DIR}"/plugin.php || -f "${CI_CFG_BUILD_DIR}"/"${CI_CFG_BUILD_DIR_BASENAME}".php ]]; then
        ln --symbolic "${CI_CFG_BUILD_DIR}" /var/bootstrap/wp/wp-content/plugins/"${CI_CFG_BUILD_DIR_BASENAME}";

        # Maybe activate network-wide.

        if [[ "${CI_RUN_WP}" == 'multisite' ]]; then
          wp plugin activate "${CI_CFG_BUILD_DIR_BASENAME}" --network --allow-root;

        else # Standard plugin activation in this case.
          wp plugin activate "${CI_CFG_BUILD_DIR_BASENAME}" --allow-root;
        fi;
      # If this is a WordPress theme.

      elif [[ -f "${CI_CFG_BUILD_DIR}"/style.css || -f "${CI_CFG_BUILD_DIR}"/functions.php ]]; then
        ln --symbolic "${CI_CFG_BUILD_DIR}" /var/bootstrap/wp/wp-content/themes/"${CI_CFG_BUILD_DIR_BASENAME}";

        # Maybe enable & activate network-wide.

        if [[ "${CI_RUN_WP}" == 'multisite' ]]; then
          wp theme enable "${CI_CFG_BUILD_DIR_BASENAME}" --network --activate --allow-root;

          for _wp_site_i in {1..2}; do
            wp theme activate "${CI_CFG_BUILD_DIR_BASENAME}" --url=https://ci.vm/site"${_wp_site_i}" --allow-root;
          done; unset _wp_site_i;

        else # Standard theme activation in this case.
          wp theme activate "${CI_CFG_BUILD_DIR_BASENAME}" --allow-root;
        fi;
      fi;
    fi;
  done; unset _wp_run; unset _wp_install_command;

  # Update permissions now.

  chown --recursive www-data:www-data /var/bootstrap/wp;

  # Set this as the www directory.

  rm --force --recursive /var/bootstrap/www;
  ln --symbolic /var/bootstrap/wp /var/bootstrap/www;
fi;
